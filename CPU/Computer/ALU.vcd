$date
	Mon May 29 20:23:28 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$scope module dut $end
$var wire 8 ! data1 [7:0] $end
$var wire 8 " data2 [7:0] $end
$var wire 3 # operation [2:0] $end
$var wire 8 $ out4 [7:0] $end
$var wire 8 % out3 [7:0] $end
$var wire 8 & out2 [7:0] $end
$var wire 8 ' out1 [7:0] $end
$var reg 8 ( result [7:0] $end
$scope module add_dut $end
$var wire 8 ) data1 [7:0] $end
$var wire 8 * data2 [7:0] $end
$var reg 8 + out [7:0] $end
$upscope $end
$scope module and_dut $end
$var wire 8 , data1 [7:0] $end
$var wire 8 - data2 [7:0] $end
$var reg 8 . out [7:0] $end
$upscope $end
$scope module fwd_dut $end
$var wire 8 / data1 [7:0] $end
$var wire 8 0 data2 [7:0] $end
$var wire 8 1 out [7:0] $end
$upscope $end
$scope module orr_dut $end
$var wire 8 2 data1 [7:0] $end
$var wire 8 3 data2 [7:0] $end
$var reg 8 4 out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 4
b100 3
b11 2
bx 1
b100 0
b11 /
bx .
b100 -
b11 ,
bx +
b100 *
b11 )
bx (
bx '
bx &
bx %
bx $
b0 #
b100 "
b11 !
$end
#1
b100 (
b111 $
b111 4
b0 %
b0 .
b100 '
b100 1
#2
b111 &
b111 +
#5
b111 (
b1 #
#10
b0 (
b10 #
#15
b111 (
b11 #
#20
