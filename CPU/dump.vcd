$date
	Thu Jun 01 23:34:01 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$var integer 32 % i [31:0] $end
$scope module mycpu $end
$var wire 1 # CLK $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 ' mux3 $end
$var wire 1 ( mux2 $end
$var wire 1 ) mux1 $end
$var wire 1 * ZERO $end
$var wire 1 + WRITE $end
$var wire 8 , OUT2 [7:0] $end
$var wire 8 - OUT1 [7:0] $end
$var wire 8 . OUT [7:0] $end
$var wire 3 / ALUOPOUT [2:0] $end
$var reg 3 0 ALUOPIN [2:0] $end
$var reg 8 1 IN [7:0] $end
$var reg 8 2 IN1 [7:0] $end
$var reg 8 3 IN2 [7:0] $end
$var reg 3 4 INADDRESS [2:0] $end
$var reg 3 5 OUT1ADDRESS [2:0] $end
$var reg 3 6 OUT2ADDRESS [2:0] $end
$var reg 32 7 PC [31:0] $end
$var reg 8 8 mux2out [7:0] $end
$scope module ALU $end
$var wire 8 9 data1 [7:0] $end
$var wire 8 : data2 [7:0] $end
$var wire 3 ; operation [2:0] $end
$var wire 8 < out4 [7:0] $end
$var wire 8 = out3 [7:0] $end
$var wire 8 > out2 [7:0] $end
$var wire 8 ? out1 [7:0] $end
$var reg 1 * ZERO $end
$var reg 8 @ result [7:0] $end
$scope module add_dut $end
$var wire 8 A data1 [7:0] $end
$var wire 8 B data2 [7:0] $end
$var reg 8 C out [7:0] $end
$upscope $end
$scope module and_dut $end
$var wire 8 D data1 [7:0] $end
$var wire 8 E data2 [7:0] $end
$var reg 8 F out [7:0] $end
$upscope $end
$scope module fwd_dut $end
$var wire 8 G data1 [7:0] $end
$var wire 8 H data2 [7:0] $end
$var reg 8 I out [7:0] $end
$upscope $end
$scope module orr_dut $end
$var wire 8 J data1 [7:0] $end
$var wire 8 K data2 [7:0] $end
$var reg 8 L out [7:0] $end
$upscope $end
$upscope $end
$scope module controler $end
$var wire 32 M instruction [31:0] $end
$var reg 3 N ALUOP [2:0] $end
$var reg 1 ) MUX1 $end
$var reg 1 ( MUX2 $end
$var reg 1 ' MUX3 $end
$var reg 1 + WRITE $end
$upscope $end
$scope module registerFile $end
$var wire 1 # CLK $end
$var wire 8 O IN [7:0] $end
$var wire 3 P INADDRESS [2:0] $end
$var wire 3 Q OUT1ADDRESS [2:0] $end
$var wire 3 R OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 + WRITE $end
$var reg 8 S OUT1 [7:0] $end
$var reg 8 T OUT2 [7:0] $end
$var reg 64 U registerfile [63:0] $end
$var integer 32 V i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
x(
x'
bx &
bx %
1$
0#
bx "
bx !
$end
#4
1#
#5
b0 !
b0 7
b0 U
b1000 V
0$
#7
0(
1)
0'
1+
b0 /
b0 N
b10000000000000011 "
b10000000000000011 &
b10000000000000011 M
#8
0*
b0 ,
b0 T
b0 -
b0 S
b11 3
b11 :
b11 B
b11 E
b11 H
b11 K
b0 0
b0 ;
b1 4
b1 P
b11 6
b11 R
b0 5
b0 Q
0#
#9
b11 .
b11 @
b0 8
b0 2
b0 9
b0 A
b0 D
b0 G
b0 J
bx11 <
bx11 L
b0xx =
b0xx F
b11 ?
b11 I
#10
b11 1
b11 O
b0 =
b0 F
b11 <
b11 L
b11 >
b11 C
#12
1#
#13
b100 !
b100 7
b11000000000000000000000000000000000000000000000000 U
#15
b100000000000000011 "
b100000000000000011 &
b100000000000000011 M
#16
b10 4
b10 P
0#
#20
1#
#21
b1000 !
b1000 7
b11000000110000000000000000000000000000000000000000 U
#23
1(
0)
b100 /
b100 N
b100000001000000000100000010 "
b100000001000000000100000010 &
b100000001000000000100000010 M
#24
b11 ,
b11 T
b11 -
b11 S
b1 0
b1 ;
b100 4
b100 P
b10 6
b10 R
b1 5
b1 Q
0#
#25
b11111101 3
b11111101 :
b11111101 B
b11111101 E
b11111101 H
b11111101 K
b11111101 8
#26
b11111101 <
b11111101 L
b11111101 ?
b11111101 I
#27
b11111101 .
b11111101 @
b11111101 >
b11111101 C
#28
b11111101 1
b11111101 O
b11 2
b11 9
b11 A
b11 D
b11 G
b11 J
1#
#29
b1100 !
b1100 7
b1 =
b1 F
b11111111 <
b11111111 L
b11000000110000000011111101000000000000000000000000 U
#30
1*
b0 .
b0 @
b0 >
b0 C
#31
0(
b11 /
b11 N
b0 1
b0 O
b11000001000000000100000010 "
b11000001000000000100000010 &
b11000001000000000100000010 M
#32
0#
#36
1#
#37
b10000 !
b10000 7
b11000000110000000000000000000000000000000000000000 U
#39
1(
0+
b100 /
b100 N
b111000000010000000100000010 "
b111000000010000000100000010 &
b111000000010000000100000010 M
#40
b1 4
b1 P
0#
#44
1#
#45
b11000 !
b11000 7
#47
0(
1)
1+
b0 /
b0 N
b1000000000011111111 "
b1000000000011111111 &
b1000000000011111111 M
#48
b11111101 .
b11111101 @
b0 ,
b0 T
b0 -
b0 S
b11111111 3
b11111111 :
b11111111 B
b11111111 E
b11111111 H
b11111111 K
b11 8
b0 0
b0 ;
b100 4
b100 P
b111 6
b111 R
b0 5
b0 Q
0#
#49
b11111111 .
b11111111 @
b0 8
b11111101 1
b11111101 O
b0 2
b0 9
b0 A
b0 D
b0 G
b0 J
b11 =
b11 F
b11111111 ?
b11111111 I
#50
0*
b11111111 1
b11111111 O
b0 =
b0 F
b11111111 >
b11111111 C
#52
1#
#53
b11100 !
b11100 7
b11000000110000000011111111000000000000000000000000 U
#55
0)
bx /
bx N
bx "
bx &
bx M
#56
bx ,
bx T
bx -
bx S
b0 3
b0 :
b0 B
b0 E
b0 H
b0 K
bx 0
bx ;
bx 4
bx P
bx 6
bx R
bx 5
bx Q
0#
#57
bx 3
bx :
bx B
bx E
bx H
bx K
bx 8
bx 2
bx 9
bx A
bx D
bx G
bx J
b0 <
b0 L
b0 ?
b0 I
#58
bx ?
bx I
bx =
bx F
bx <
bx L
bx >
bx C
#60
1#
#61
b100000 !
b100000 7
#64
0#
#68
1#
#69
b100100 !
b100100 7
#72
0#
#76
1#
#77
b101000 !
b101000 7
#80
0#
#84
1#
#85
b101100 !
b101100 7
#88
0#
#92
1#
#93
b110000 !
b110000 7
#96
0#
#100
1#
#101
b110100 !
b110100 7
#104
0#
#108
1#
#109
b111000 !
b111000 7
#112
0#
#116
1#
#117
b111100 !
b111100 7
#120
0#
#124
1#
#125
b1000000 !
b1000000 7
#128
0#
#132
1#
#133
b1000100 !
b1000100 7
#136
0#
#140
1#
#141
b1001000 !
b1001000 7
#144
0#
#148
1#
#149
b1001100 !
b1001100 7
#152
0#
#156
1#
#157
b1010000 !
b1010000 7
#160
0#
#164
1#
#165
b1010100 !
b1010100 7
#168
0#
#172
1#
#173
b1011000 !
b1011000 7
#176
0#
#180
1#
#181
b1011100 !
b1011100 7
#184
0#
#188
1#
#189
b1100000 !
b1100000 7
#192
0#
#196
1#
#197
b1100100 !
b1100100 7
#200
0#
#204
1#
#205
b1101000 !
b1101000 7
#208
0#
#212
1#
#213
b1101100 !
b1101100 7
#216
0#
#220
1#
#221
b1110000 !
b1110000 7
#224
0#
#228
1#
#229
b1110100 !
b1110100 7
#232
0#
#236
1#
#237
b1111000 !
b1111000 7
#240
0#
#244
1#
#245
b1111100 !
b1111100 7
#248
0#
#252
1#
#253
b10000000 !
b10000000 7
#256
0#
#260
1#
#261
b10000100 !
b10000100 7
#264
0#
#268
1#
#269
b10001000 !
b10001000 7
#272
0#
#276
1#
#277
b10001100 !
b10001100 7
#280
0#
#284
1#
#285
b10010000 !
b10010000 7
#288
0#
#292
1#
#293
b10010100 !
b10010100 7
#296
0#
#300
1#
#301
b10011000 !
b10011000 7
#304
0#
#305
b1000 %
#308
1#
#309
b10011100 !
b10011100 7
#312
0#
#315
