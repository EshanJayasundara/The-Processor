$date
	Sat May 20 23:00:46 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$scope module CPU $end
$var wire 1 ! CLK $end
$var wire 32 " INSTRUCTION [31:0] $end
$var wire 32 # PC [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 % mux2 $end
$var wire 1 & mux1 $end
$var wire 8 ' OUT2 [7:0] $end
$var wire 8 ( OUT1 [7:0] $end
$var wire 8 ) OUT [7:0] $end
$var wire 3 * ALUOPOUT [2:0] $end
$var reg 3 + ALUOPIN [2:0] $end
$var reg 8 , IN [7:0] $end
$var reg 8 - IN1 [7:0] $end
$var reg 8 . IN2 [7:0] $end
$var reg 3 / INADDRESS [2:0] $end
$var reg 3 0 OUT1ADDRESS [2:0] $end
$var reg 3 1 OUT2ADDRESS [2:0] $end
$var reg 1 2 WRITE $end
$scope module ALU $end
$var wire 8 3 data1 [7:0] $end
$var wire 8 4 data2 [7:0] $end
$var wire 3 5 operation [2:0] $end
$var wire 8 6 out4 [7:0] $end
$var wire 8 7 out3 [7:0] $end
$var wire 8 8 out2 [7:0] $end
$var wire 8 9 out1 [7:0] $end
$var reg 8 : result [7:0] $end
$scope module add_dut $end
$var wire 8 ; data1 [7:0] $end
$var wire 8 < data2 [7:0] $end
$var reg 8 = out [7:0] $end
$upscope $end
$scope module fwd_dut $end
$var wire 8 > data1 [7:0] $end
$var wire 8 ? data2 [7:0] $end
$var reg 8 @ out [7:0] $end
$upscope $end
$scope module mul_dut $end
$var wire 8 A data1 [7:0] $end
$var wire 8 B data2 [7:0] $end
$var reg 8 C out [7:0] $end
$upscope $end
$scope module orr_dut $end
$var wire 8 D data1 [7:0] $end
$var wire 8 E data2 [7:0] $end
$var reg 8 F out [7:0] $end
$upscope $end
$upscope $end
$scope module controler $end
$var wire 32 G instruction [31:0] $end
$var wire 3 H ALUOP [2:0] $end
$var reg 1 & MUX1 $end
$var reg 1 % MUX2 $end
$upscope $end
$scope module registerFile $end
$var wire 1 ! CLK $end
$var wire 8 I IN [7:0] $end
$var wire 3 J INADDRESS [2:0] $end
$var wire 3 K OUT1ADDRESS [2:0] $end
$var wire 3 L OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 2 WRITE $end
$var reg 8 M OUT1 [7:0] $end
$var reg 8 N OUT2 [7:0] $end
$var reg 64 O registerfile [63:0] $end
$var integer 32 P i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 P
b0 O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
02
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
x%
1$
b0 #
bx "
0!
$end
#5
0$
1!
#10
0!
#15
1!
#16
b0 +
b0 5
b1011 .
b1011 4
b1011 <
b1011 ?
b1011 B
b1011 E
12
0%
1&
b0 '
b0 N
bx00000000000000000000000000000000000000000000000000000000 O
b0 *
b0 H
b11 1
b11 L
b0 0
b0 K
b0 /
b0 J
b1011 "
b1011 G
#17
b1011 -
b1011 3
b1011 ;
b1011 >
b1011 A
b1011 D
b1011 (
b1011 M
b101100000000000000000000000000000000000000000000000000000000 O
b1011 ,
b1011 I
b1011 )
b1011 :
bx1x11 6
bx1x11 F
b0x0xx 7
b0x0xx C
b1011 9
b1011 @
#18
b1011 7
b1011 C
b1011 6
b1011 F
b10110 8
b10110 =
#20
0!
#25
1!
#30
0!
#35
1!
#36
b101100001011000000000000000000000000000000000000000000000000 O
b11 .
b11 4
b11 <
b11 ?
b11 B
b11 E
b1 /
b1 J
b10000000000000011 "
b10000000000000011 G
#37
b101100000011000000000000000000000000000000000000000000000000 O
b11 ,
b11 I
b11 )
b11 :
b11 7
b11 C
b11 9
b11 @
#38
b1110 8
b1110 =
#40
0!
#45
1!
#50
0!
#55
1!
#56
b1110 ,
b1110 I
b1110 )
b1110 :
b1 +
b1 5
02
1%
0&
b11 '
b11 N
b101100000011000011100000000000000000000000000000000000000000 O
b100 *
b100 H
b11111101 .
b11111101 4
b11111101 <
b11111101 ?
b11111101 B
b11111101 E
b1 1
b1 L
b10 /
b10 J
b10000000000000100000000000000001 "
b10000000000000100000000000000001 G
#57
b1001 7
b1001 C
b11111111 6
b11111111 F
b11111101 9
b11111101 @
#58
b101100000011000010000000000000000000000000000000000000000000 O
b11111101 .
b11111101 4
b11111101 <
b11111101 ?
b11111101 B
b11111101 E
b1000 ,
b1000 I
b1000 )
b1000 :
b1000 8
b1000 =
#60
0!
#65
1!
#70
0!
#75
1!
#76
0%
b101100000011000010000000100000000000000000000000000000000000 O
b1 *
b1 H
b11 .
b11 4
b11 <
b11 ?
b11 B
b11 E
b11 /
b11 J
b100000000000110000000000000001 "
b100000000000110000000000000001 G
#77
b11 7
b11 C
b1011 6
b1011 F
b11 9
b11 @
#78
b101100000011000010000000111000000000000000000000000000000000 O
b1110 ,
b1110 I
b1110 )
b1110 :
b1110 8
b1110 =
#80
0!
#85
1!
#90
0!
#95
1!
#96
b11 ,
b11 I
b11 )
b11 :
b10 +
b10 5
b101100000011000010000000111000000011000000000000000000000000 O
b10 *
b10 H
b100 /
b100 J
b1000000000001000000000000000001 "
b1000000000001000000000000000001 G
#100
0!
#105
1!
#110
0!
#115
1!
#116
b1011 ,
b1011 I
b1011 )
b1011 :
b11 +
b11 5
b101100000011000010000000111000000011000010110000000000000000 O
b11 *
b11 H
b101 /
b101 J
b1100000000001010000000000000001 "
b1100000000001010000000000000001 G
#120
0!
#125
1!
#130
0!
#135
1!
#140
0!
#145
1!
#150
0!
#155
1!
#160
0!
#165
1!
#170
0!
#175
1!
#180
0!
#185
1!
#190
0!
#195
1!
#200
0!
#205
1!
#210
0!
#215
1!
#220
0!
#225
1!
#230
0!
#235
1!
#240
0!
#245
1!
#250
0!
#255
1!
#260
0!
#265
1!
#270
0!
#275
1!
#280
0!
#285
1!
#290
0!
#295
1!
#300
0!
#305
1!
#310
0!
#315
1!
#316
